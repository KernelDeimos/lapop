def script testcursor [
  (cursor.write text 'return ')
  (cursor.write symbol (args 0))
]

def pattern while [
  [list] [list]
]

def now A [
  (lfun if {a _ b _} [
    (while (a)
      (append (b) (code [break])))
  ])
  (logger.info 'Hello!')
  (lset i 0)
  while [< (i) 10] [
    (logger.info (i))
    (lset i (+ (i) 1))
  ]
  (if [== (i) 0] [
    (logger.info ':/ i was not set by loop')
  ])
  (if [== (i) 10] [
    (logger.info ':D i was set by loop')
  ])
]

def now B [
  : a 'pie'
  : b 1
  : c { x 1 y 2 }
  (if [== 1 1] [
    (logger.info 'if works')
  ])
  (logger.info (a))
  (logger.info (append [1 'a'] 3) )
  (logger.info (+ 5 2))
  (logger.info (* 5 2))
  (logger.info (% 5 3))
  (logger.info (< 5 3))
  (logger.info (< 3 5))
  (logger.info (!= 2 2))
  (logger.info (!= 1 2))
  : i 0
  : x 10
  (if [< (i) (x)] [
    = a 'cheese'
    (logger.info (i) '-,' (+p i))
  ])
  while [< (i) 10] [
    = a 'cheese'
    (logger.info (i) '->' (+p i))
  ]
  (logger.info (a))

  : a 5
  : b 2
  (logger.dump (a))
  (logger.dump (b))
  (if [< (a) (b)] [
    (logger.info 'the interpreter is broken')
  ])
  (if [< (b) (a)] [
    (logger.info 'Yay!')
  ])
]